asyncapi: 2.4.0
id: 'urn:tmforum:com:TMF621:TroubleTicket:Application'
info:
  title: Trouble Ticke AsyncAPI
  contact:
    name: API Support
    url: 'https://www.tmforum.org/contact-us/'
    email: info@tmforum.org
  description: "**TMF API Reference : TMF - 621 Trouble Ticket**\n\n**Release : 19.0 - June 2019**\n\nThe Trouble Ticket API provides a standardized client interface to Trouble Ticket Management Systems for creating, tracking and managing trouble tickets as a result of an issue or problem identified by a customer or another system. \nExamples of Trouble Ticket API originators (clients) include CRM applications, network management or fault management systems, or other Trouble Ticket management systems (e.g. B2B).\n\nThe API supports the ability to send requests to create a new trouble ticket specifying the nature and severity of the trouble or issue as well as all necessary related information. The API also includes mechanisms to search for and update existing trouble tickets. Notifications are defined to provide information when a trouble ticket has been updated, including status changes. A basic set of states of a trouble ticket has been specified (as an example) to handle trouble ticket lifecycle management.\nTrouble Ticketing API manages trouble ticket resource:\n\n  -\tA trouble ticket represents a record, or an issue raised by requestor that need to be solved, used for reporting and managing the resolution of problems, incidents or request -\tMain trouble ticket attributes are its description, severity, type, related dates (creation, expected resolution, resolution), state and related information (change reason and change date), related parties (originator, owner, reviser, etc.), related entities (product, product order, customer bill) and notes Trouble Ticket API performs the following operations on trouble ticket -\tRetrieval of a trouble ticket or a collection of trouble ticket depending on filter criteria -\tPartial update of a trouble ticket -\tCreation of a trouble ticket -\tNotification of events on trouble ticket: o\tTrouble ticket state change o\tTrouble ticket change o\tTrouble ticket resoled o\tTrouble ticket created o\tTrouble ticket Information required\n\n\n\nCopyright Â© TM Forum 2019. All Rights Reserved\n\n\n"
  version: 4.0.0
externalDocs:
  description: TMForum Open API
  url: 'https://tmforum.org/'
tags:
  - name: troubleTicket
servers:
  development:
    url: development.tmforum.com
    description: Development Kafka server
    protocol: kafka
  staging:
    url: staging.tmforum.com
    description: Development Kafka server
    protocol: kafka
  production:
    url: production.tmforum.com
    description: Development Kafka server
    protocol: kafka
defaultContentType: application/json

channels:
  tmfapi.TroubleTicket.v4.retrieveTroubleTicket.commandRequest:
    publish:
      operationId: retrieveTroubleTicketRequest
      summary: Retrieves a TroubleTicket by ID
      tags:
        - name: troubleTicket
      description: >-
        This operation retrieves a TroubleTicket entity. Attribute selection is
        enabled for all first level attributes.
      message:
        $ref: '#/components/messages/RetrieveTroubleTicketRequest'
      traits:
        - $ref: '#/components/operationTraits/kafka'

components:
  schemas:





    RetrieveTroubleTicketRequestPayload:
      x-parser-schema-id: RetrieveTroubleTicketRequestPayload,
      type: object
      properties:
        parameters:
          x-parser-schema-id: RetrieveTroubleTicketRequestPayloadParameters,
          type: object
          properties:
            id:
              description: Identifier of the TroubleTicket
              type: string
            fields:
              description: Comma-separated properties to provide in response
              type: string
          required:
            - id
        filters:
          x-parser-schema-id: RetrieveTroubleTicketRequestPayloadFilters,
          type: object
          additionalProperties:
            type: string
      required:
        - parameters
    CorrelationHeader:
      x-parser-schema-id: CorrelationHeader,
      type: object
      properties:
        CORRELATION_ID:
          description: Correlation ID set by application
          type: string
          format: uuid
      required:
        - CORRELATION_ID
    ApplicationHeader:
      x-parser-schema-id: ApplicationHeader,
      type: object
      properties:
          APPLICATION:
            type: string
            description: Name of the calling application.
          required:
            - APPLICATION
    RequestHeaders:
      allOf:
        - type: object
          x-parser-schema-id: RequestHeadersAPPLICATION,
          properties:
            APPLICATION:
              type: string
              description: Name of the calling application.
          required:
            - APPLICATION
        - $ref: '#/components/schemas/CorrelationHeader'
  messages:
    RetrieveTroubleTicketRequest:
      name: RetrieveTroubleTicketRequest
      headers:
        $ref: '#/components/schemas/RequestHeaders'
      payload:
        $ref: '#/components/schemas/RetrieveTroubleTicketRequestPayload'


  correlationIds:   
    default:
      description: Default Correlation ID
      location: '$message.header#/CORRELATION_ID'
  operationTraits:
    kafka:
      bindings:
        kafka:
          key:
            type: string
            description: An optional message key
          clientId:
            type: string
            description: >-
              An optional identifier of a Kafka consumer (in a consumer group)
              that is passed to a Kafka broker with every request.
