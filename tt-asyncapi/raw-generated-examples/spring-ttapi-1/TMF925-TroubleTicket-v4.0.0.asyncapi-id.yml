asyncapi: 2.4.0
id: 'urn:tmforum:com:TMF621:TroubleTicket:Application'
info:
  title: Trouble Ticke AsyncAPI
  contact:
    name: API Support
    url: 'https://www.tmforum.org/contact-us/'
    email: info@tmforum.org
  description: "**TMF API Reference : TMF - 621 Trouble Ticket**\n\n**Release : 19.0 - June 2019**\n\nThe Trouble Ticket API provides a standardized client interface to Trouble Ticket Management Systems for creating, tracking and managing trouble tickets as a result of an issue or problem identified by a customer or another system. \nExamples of Trouble Ticket API originators (clients) include CRM applications, network management or fault management systems, or other Trouble Ticket management systems (e.g. B2B).\n\nThe API supports the ability to send requests to create a new trouble ticket specifying the nature and severity of the trouble or issue as well as all necessary related information. The API also includes mechanisms to search for and update existing trouble tickets. Notifications are defined to provide information when a trouble ticket has been updated, including status changes. A basic set of states of a trouble ticket has been specified (as an example) to handle trouble ticket lifecycle management.\nTrouble Ticketing API manages trouble ticket resource:\n\n  -\tA trouble ticket represents a record, or an issue raised by requestor that need to be solved, used for reporting and managing the resolution of problems, incidents or request -\tMain trouble ticket attributes are its description, severity, type, related dates (creation, expected resolution, resolution), state and related information (change reason and change date), related parties (originator, owner, reviser, etc.), related entities (product, product order, customer bill) and notes Trouble Ticket API performs the following operations on trouble ticket -\tRetrieval of a trouble ticket or a collection of trouble ticket depending on filter criteria -\tPartial update of a trouble ticket -\tCreation of a trouble ticket -\tNotification of events on trouble ticket: o\tTrouble ticket state change o\tTrouble ticket change o\tTrouble ticket resoled o\tTrouble ticket created o\tTrouble ticket Information required\n\n\n\nCopyright Â© TM Forum 2019. All Rights Reserved\n\n\n"
  version: 4.0.0
externalDocs:
  description: TMForum Open API
  url: 'https://tmforum.org/'
tags:
  - name: troubleTicket
servers:
  development:
    url: development.tmforum.com
    description: Development Kafka server
    protocol: kafka
  staging:
    url: staging.tmforum.com
    description: Development Kafka server
    protocol: kafka
  production:
    url: production.tmforum.com
    description: Development Kafka server
    protocol: kafka
defaultContentType: application/json
channels:
  tmfapi.TroubleTicket.v4.retrieveTroubleTicket.commandRequest:
    publish:
      operationId: retrieveTroubleTicketRequest
      summary: Retrieves a TroubleTicket by ID
      tags:
        - name: troubleTicket
      description: >-
        This operation retrieves a TroubleTicket entity. Attribute selection is
        enabled for all first level attributes.
      message:
        $ref: '#/components/messages/RetrieveTroubleTicketRequest'
      traits:
        - $ref: '#/components/operationTraits/kafka'
  tmfapi.TroubleTicket.v4.retrieveTroubleTicket.commandReply:
    subscribe:
      operationId: retrieveTroubleTicketResponse
      tags:
        - name: troubleTicket
      message:
        $ref: '#/components/messages/RetrieveTroubleTicketResponse'
      traits:
        - $ref: '#/components/operationTraits/kafka'
  'tmfapi.TroubleTicket.v4.retrieveTroubleTicket.{application}.commandReply':
    parameters:
      application:
        description: Calling application.
        schema:
          type: string
    subscribe:
      operationId: retrieveTroubleTicketResponseMultiTopic
      description: >-
        Optional approach to use the  ReturnAddress Pattern. Each {Application}
        has it's own reply topic. The {Application} parameter represents the
        calling application identifier.
      tags:
        - name: troubleTicket
      message:
        $ref: '#/components/messages/RetrieveTroubleTicketResponse'
      traits:
        - $ref: '#/components/operationTraits/kafka'
  tmfapi.TroubleTicket.v4.listTroubleTicket.commandRequest:
    publish:
      operationId: listTroubleTicketRequest
      summary: List or find TroubleTicket objects
      tags:
        - name: troubleTicket
      description: This operation list or find TroubleTicket entities
      message:
        $ref: '#/components/messages/ListTroubleTicketRequest'
      traits:
        - $ref: '#/components/operationTraits/kafka'
  tmfapi.TroubleTicket.v4.listTroubleTicket.commandReply:
    subscribe:
      operationId: listTroubleTicketResponse
      tags:
        - name: troubleTicket
      message:
        $ref: '#/components/messages/ListTroubleTicketResponse'
      traits:
        - $ref: '#/components/operationTraits/kafka'
  'tmfapi.TroubleTicket.v4.listTroubleTicket.{application}.commandReply':
    parameters:
      application:
        description: Calling application.
        schema:
          type: string
    subscribe:
      operationId: listTroubleTicketResponseMultiTopic
      description: >-
        Optional approach to use the  ReturnAddress Pattern. Each {Application}
        has it's own reply topic. The {Application} parameter represents the
        calling application identifier.
      tags:
        - name: troubleTicket
      message:
        $ref: '#/components/messages/ListTroubleTicketResponse'
      traits:
        - $ref: '#/components/operationTraits/kafka'
  tmfapi.TroubleTicket.v4.createTroubleTicket.commandRequest:
    publish:
      operationId: createTroubleTicketRequest
      summary: Creates a TroubleTicket
      tags:
        - name: troubleTicket
      description: This operation creates a TroubleTicket entity.
      message:
        $ref: '#/components/messages/CreateTroubleTicketRequest'
      traits:
        - $ref: '#/components/operationTraits/kafka'
  tmfapi.TroubleTicket.v4.createTroubleTicket.commandReply:
    subscribe:
      operationId: createTroubleTicketResponse
      tags:
        - name: troubleTicket
      message:
        $ref: '#/components/messages/CreateTroubleTicketResponse'
      traits:
        - $ref: '#/components/operationTraits/kafka'
  'tmfapi.TroubleTicket.v4.createTroubleTicket.{application}.commandReply':
    parameters:
      application:
        description: Calling application.
        schema:
          type: string
    subscribe:
      operationId: createTroubleTicketResponseMultiTopic
      description: >-
        Optional approach to use the  ReturnAddress Pattern. Each {Application}
        has it's own reply topic. The {Application} parameter represents the
        calling application identifier.
      tags:
        - name: troubleTicket
      message:
        $ref: '#/components/messages/CreateTroubleTicketResponse'
      traits:
        - $ref: '#/components/operationTraits/kafka'
  tmfapi.TroubleTicket.v4.patchTroubleTicket.commandRequest:
    publish:
      operationId: patchTroubleTicketRequest
      summary: Updates partially a TroubleTicket
      tags:
        - name: troubleTicket
      description: This operation updates partially a TroubleTicket entity.
      message:
        $ref: '#/components/messages/PatchTroubleTicketRequest'
      traits:
        - $ref: '#/components/operationTraits/kafka'
  tmfapi.TroubleTicket.v4.patchTroubleTicket.commandReply:
    subscribe:
      operationId: patchTroubleTicketResponse
      tags:
        - name: troubleTicket
      message:
        $ref: '#/components/messages/PatchTroubleTicketResponse'
      traits:
        - $ref: '#/components/operationTraits/kafka'
  'tmfapi.TroubleTicket.v4.patchTroubleTicket.{application}.commandReply':
    parameters:
      application:
        description: Calling application.
        schema:
          type: string
    subscribe:
      operationId: patchTroubleTicketResponseMultiTopic
      description: >-
        Optional approach to use the  ReturnAddress Pattern. Each {Application}
        has it's own reply topic. The {Application} parameter represents the
        calling application identifier.
      tags:
        - name: troubleTicket
      message:
        $ref: '#/components/messages/PatchTroubleTicketResponse'
      traits:
        - $ref: '#/components/operationTraits/kafka'
  tmfapi.TroubleTicket.v4.deleteTroubleTicket.commandRequest:
    publish:
      operationId: deleteTroubleTicketRequest
      summary: Deletes a TroubleTicket
      tags:
        - name: troubleTicket
      description: This operation deletes a TroubleTicket entity.
      message:
        $ref: '#/components/messages/DeleteTroubleTicketRequest'
      traits:
        - $ref: '#/components/operationTraits/kafka'
  tmfapi.TroubleTicket.v4.deleteTroubleTicket.commandReply:
    subscribe:
      operationId: deleteTroubleTicketResponse
      tags:
        - name: troubleTicket
      message:
        $ref: '#/components/messages/DeleteTroubleTicketResponse'
      traits:
        - $ref: '#/components/operationTraits/kafka'
  'tmfapi.TroubleTicket.v4.deleteTroubleTicket.{application}.commandReply':
    parameters:
      application:
        description: Calling application.
        schema:
          type: string
    subscribe:
      operationId: deleteTroubleTicketResponseTopic
      description: >-
        Optional approach to use the  ReturnAddress Pattern. Each {Application}
        has it's own reply topic. The {Application} parameter represents the
        calling application identifier.
      tags:
        - name: troubleTicket
      message:
        $ref: '#/components/messages/DeleteTroubleTicketResponse'
      traits:
        - $ref: '#/components/operationTraits/kafka'
  tmfapi.TroubleTicket.v4.notificationEvent:
    subscribe:
      operationId: troubleTicketNotification
      tags:
        - name: troubleTicket
      message:
        $ref: '#/components/messages/TroubleTicketNotification'
      traits:
        - $ref: '#/components/operationTraits/kafka'
components:
  schemas:
    AttachmentRefOrValue:
      $id: AttachmentRefOrValue,
      type: object
      description: >-
        An attachment by value or by reference. An attachment complements the
        description of an element, for example through a document, a video, a
        picture.
      properties:
        href:
          type: string
          format: uri
          description: URI for this Attachment
          example: 'http://host/Attachment/4aafacbd-11ff-4dc8-b445-305f2215715f'
        id:
          type: string
          description: Unique identifier for this particular attachment
          example: 4aafacbd-11ff-4dc8-b445-305f2215715f
        '@baseType':
          type: string
          description: 'When sub-classing, this defines the super-class'
        '@schemaLocation':
          type: string
          format: uri
          description: >-
            A URI to a JSON-Schema file that defines additional attributes and
            relationships
        '@type':
          type: string
          description: 'When sub-classing, this defines the sub-class Extensible name'
        '@referredType':
          type: string
          description: >-
            The actual type of the target instance when needed for
            disambiguation.
        name:
          type: string
          description: The name of the attachment
          example: iPhone 14 video
        description:
          type: string
          description: A narrative text describing the content of the attachment
          example: Photograph of the Product
        url:
          type: string
          format: uri
          description: Remote reference to the content if web-addressable
          example: 'http://host/Content/4aafacbd-11ff-4dc8-b445-305f2215715f'
        attachmentType:
          type: string
          description: 'Attachment type such as video, picture'
          example: video
        content:
          type: string
          format: base64
          description: >-
            The actual contents of the attachment object, if embedded, encoded
            as base64
        mimeType:
          type: string
          description: >-
            Attachment mime type such as extension file for video, picture and
            document
          example: video/mp4
        size:
          description: The size of the attachment
          $ref: '#/components/schemas/Quantity'
        validFor:
          description: The period of time for which the attachment is valid
          $ref: '#/components/schemas/TimePeriod'
    ReferredType:
      $id: ReferredType,
      type: object
      description: A referred entity
      properties:
        '@referredType':
          type: string
          description: >-
            The actual type of the target instance when needed for
            disambiguation.
    RelatedParty:
      $id: RelatedParty,
      type: object
      description: >-
        Related Entity reference. A related party defines party or party role
        linked to a specific entity.
      required:
        - '@referredType'
        - id
      properties:
        href:
          type: string
          format: uri
          description: Hyperlink reference
        id:
          type: string
          description: unique identifier
        '@baseType':
          type: string
          description: 'When sub-classing, this defines the super-class'
        '@schemaLocation':
          type: string
          format: uri
          description: >-
            A URI to a JSON-Schema file that defines additional attributes and
            relationships
        '@type':
          type: string
          description: 'When sub-classing, this defines the sub-class Extensible name'
        '@referredType':
          type: string
          description: >-
            The actual type of the target instance when needed for
            disambiguation.
        name:
          type: string
          description: Name of the related entity.
        role:
          type: string
          description: Role played by the related party
    RelatedEntity:
      $id: RelatedEntity,
      type: object
      description: >-
        A reference to an entity, where the type of the entity is not known in
        advance.
      required:
        - '@referredType'
        - id
        - role
      properties:
        href:
          type: string
          format: uri
          description: Hyperlink reference
        id:
          type: string
          description: unique identifier
        '@baseType':
          type: string
          description: 'When sub-classing, this defines the super-class'
        '@schemaLocation':
          type: string
          format: uri
          description: >-
            A URI to a JSON-Schema file that defines additional attributes and
            relationships
        '@type':
          type: string
          description: 'When sub-classing, this defines the sub-class Extensible name'
        '@referredType':
          type: string
          description: >-
            The actual type of the target instance when needed for
            disambiguation.
        name:
          type: string
          description: Name of the related entity.
        role:
          type: string
          description: The role of an entity.
    StatusChange:
      $id: StatusChange,
      type: object
      description: >-
        Holds the status notification reasons and associated date the status
        changed, populated by the server
      properties:
        href:
          type: string
          format: uri
          description: Hyperlink reference
        id:
          type: string
          description: unique identifier
        '@baseType':
          type: string
          description: 'When sub-classing, this defines the super-class'
        '@schemaLocation':
          type: string
          format: uri
          description: >-
            A URI to a JSON-Schema file that defines additional attributes and
            relationships
        '@type':
          type: string
          description: 'When sub-classing, this defines the sub-class Extensible name'
        changeDate:
          type: string
          format: date-time
          description: The date and time the status changed.
        changeReason:
          type: string
          description: The reason why the status changed.
        status:
          type: string
          description: The status of the trouble ticket
    Attachment:
      $id: Attachment,
      type: object
      description: >-
        Complements the description of an element (for instance a product)
        through video, pictures...
      properties:
        href:
          type: string
          format: uri
          description: URI for this Attachment
          example: 'http://host/Attachment/4aafacbd-11ff-4dc8-b445-305f2215715f'
        id:
          type: string
          description: Unique identifier for this particular attachment
          example: 4aafacbd-11ff-4dc8-b445-305f2215715f
        '@baseType':
          type: string
          description: 'When sub-classing, this defines the super-class'
        '@schemaLocation':
          type: string
          format: uri
          description: >-
            A URI to a JSON-Schema file that defines additional attributes and
            relationships
        '@type':
          type: string
          description: 'When sub-classing, this defines the sub-class Extensible name'
        attachmentType:
          type: string
          description: 'Attachment type such as video, picture'
          example: video
        content:
          type: string
          format: base64
          description: >-
            The actual contents of the attachment object, if embedded, encoded
            as base64
        description:
          type: string
          description: A narrative text describing the content of the attachment
          example: Photograph of the Product
        mimeType:
          type: string
          description: >-
            Attachment mime type such as extension file for video, picture and
            document
          example: video/mp4
        name:
          type: string
          description: The name of the attachment
          example: iPhone 14 video
        size:
          description: The size of the attachment
          $ref: '#/components/schemas/Quantity'
        url:
          type: string
          format: uri
          description: Remote reference to the content if web-addressable
          example: 'http://host/Content/4aafacbd-11ff-4dc8-b445-305f2215715f'
        validFor:
          description: The period of time for which the attachment is valid
          $ref: '#/components/schemas/TimePeriod'
    Note:
      $id: Note,
      type: object
      description: Extra information about a given entity
      properties:
        '@baseType':
          type: string
          description: 'When sub-classing, this defines the super-class'
        '@schemaLocation':
          type: string
          format: uri
          description: >-
            A URI to a JSON-Schema file that defines additional attributes and
            relationships
        '@type':
          type: string
          description: 'When sub-classing, this defines the sub-class Extensible name'
        author:
          type: string
          description: Author of the note
          example:
            - Mr. N. Bene
        date:
          type: string
          format: date-time
          description: Date of the note
          example:
            - '2020-11-20T08:00:00Z'
        id:
          type: string
          description: Identifier of the note within its containing entity
          example:
            - afa9-3d90aaa8da0f
        text:
          type: string
          description: Text of the note
          example:
            - This is important
    TimePeriod:
      $id: TimePeriod,
      type: object
      description: >-
        A period of time, either as a deadline (endDateTime only) a
        startDateTime only, or both
      properties:
        endDateTime:
          type: string
          format: date-time
          description: 'End of the time period, using IETC-RFC-3339 format'
          example: '1985-04-12T23:20:50.52Z'
        startDateTime:
          type: string
          format: date-time
          description: 'Start of the time period, using IETC-RFC-3339 format'
          example: '1985-04-12T23:20:50.52Z'
    AttachmentRef:
      $id: AttachmentRef,
      type: object
      description: >-
        Attachment reference. An attachment complements the description of an
        element (for instance a product) through video, pictures
      required:
        - id
      properties:
        href:
          type: string
          format: uri
          description: URL serving as reference for the attachment resource
        id:
          type: string
          description: Unique-Identifier for this attachment
        '@baseType':
          type: string
          description: 'When sub-classing, this defines the super-class'
        '@schemaLocation':
          type: string
          format: uri
          description: >-
            A URI to a JSON-Schema file that defines additional attributes and
            relationships
        '@type':
          type: string
          description: 'When sub-classing, this defines the sub-class Extensible name'
        '@referredType':
          type: string
          description: >-
            The actual type of the target instance when needed for
            disambiguation.
        name:
          type: string
          description: Name of the related entity.
        description:
          type: string
          description: A narrative text describing the content of the attachment
        url:
          type: string
          format: uri
          description: Link to the attachment media/content
    Error:
      $id: Error,
      type: object
      description: >-
        Used when an API throws an Error, typically with a HTTP error
        response-code (3xx, 4xx, 5xx)
      required:
        - code
        - reason
      properties:
        '@baseType':
          type: string
          description: 'When sub-classing, this defines the super-class'
        '@schemaLocation':
          type: string
          format: uri
          description: >-
            A URI to a JSON-Schema file that defines additional attributes and
            relationships
        '@type':
          type: string
          description: 'When sub-classing, this defines the sub-class Extensible name'
        code:
          type: string
          description: 'Application relevant detail, defined in the API or a common list.'
        message:
          type: string
          description: >-
            More details and corrective actions related to the error which can
            be shown to a client user.
        reason:
          type: string
          description: >-
            Explanation of the reason for the error which can be shown to a
            client user.
        referenceError:
          type: string
          format: uri
          description: URI of documentation describing the error.
        status:
          type: string
          description: HTTP Error code extension
    EntityRef:
      $id: EntityRef,
      type: object
      description: Entity reference schema to be use for all entityRef class.
      required:
        - id
      properties:
        href:
          type: string
          format: uri
          description: Hyperlink reference
        id:
          type: string
          description: unique identifier
        '@baseType':
          type: string
          description: 'When sub-classing, this defines the super-class'
        '@schemaLocation':
          type: string
          format: uri
          description: >-
            A URI to a JSON-Schema file that defines additional attributes and
            relationships
        '@type':
          type: string
          description: 'When sub-classing, this defines the sub-class Extensible name'
        '@referredType':
          type: string
          description: >-
            The actual type of the target instance when needed for
            disambiguation.
        name:
          type: string
          description: Name of the related entity.
    Quantity:
      $id: Quantity,
      type: object
      description: An amount in a given unit
      properties:
        amount:
          type: number
          format: float
          description: Numeric value in a given unit
          default: 1
        units:
          type: string
          description: Unit
    TroubleTicketRelationship:
      $id: TroubleTicketRelationship,
      type: object
      description: Represents a relationship between trouble Trouble Tickets
      properties:
        href:
          type: string
          description: Reference of the Trouble Ticket
        id:
          type: string
          description: Unique identifier of the Trouble Ticket
        '@baseType':
          type: string
          description: 'When sub-classing, this defines the super-class'
        '@schemaLocation':
          type: string
          format: uri
          description: >-
            A URI to a JSON-Schema file that defines additional attributes and
            relationships
        '@type':
          type: string
          description: 'When sub-classing, this defines the sub-class Extensible name'
        name:
          type: string
          description: Name of the Trouble Ticket
        relationshipType:
          type: string
          description: >-
            Type of the  Trouble Ticket relationship can be isChiled, dependent
            etc...
    TroubleTicket:
      $id: TroubleTicket,
      type: object
      description: >-
        A trouble ticket is a record of an issue that is created, tracked, and
        managed by a trouble ticket management system
      properties:
        href:
          type: string
          description: 'Hyperlink, a reference to the trouble ticket entity'
        id:
          type: string
          description: Unique identifier of the trouble ticket
        '@baseType':
          type: string
          description: 'When sub-classing, this defines the super-class'
        '@schemaLocation':
          type: string
          format: uri
          description: >-
            A URI to a JSON-Schema file that defines additional attributes and
            relationships
        '@type':
          type: string
          description: 'When sub-classing, this defines the sub-class Extensible name'
        attachment:
          type: array
          items:
            $ref: '#/components/schemas/AttachmentRefOrValue'
          description: >-
            File(s) attached to the trouble ticket. e.g. pictur of broken
            device, scaning of a bill or charge
        channel:
          description: The channel that origin the trouble ticket
          $ref: '#/components/schemas/ChannelRef'
        creationDate:
          type: string
          format: date-time
          description: The date on which the trouble ticket was created
        description:
          type: string
          description: Description of the trouble or issue
        expectedResolutionDate:
          type: string
          format: date-time
          description: The expected resolution date determined by the trouble ticket system
        externalId:
          type: string
          description: Additional identifier coming from an external system
        lastUpdate:
          type: string
          format: date-time
          description: The date and time that the trouble ticked was last updated
        name:
          type: string
          description: >-
            Name of the trouble ticket, typically a short description provided
            by the user that create the ticket
        note:
          type: array
          items:
            $ref: '#/components/schemas/Note'
          description: The note(s) that are associated to the ticket.
        priority:
          type: string
          description: >-
            The priority of the trouble ticket and how quickly the issue should
            be resolved. Example: Critical, High, Medium, Low. The value is set
            by the ticket management system considering the severity, ticket
            type etc...
        relatedEntity:
          type: array
          items:
            $ref: '#/components/schemas/RelatedEntity'
          description: >-
            An entity that is related to the ticket such as a bill, a product,
            etc. The entity against which the ticket is associated.
        relatedParty:
          type: array
          items:
            $ref: '#/components/schemas/RelatedParty'
          description: The related party(ies) that are associated to the ticket.
        requestedResolutionDate:
          type: string
          format: date-time
          description: The resolution date requested by the user
        resolutionDate:
          type: string
          format: date-time
          description: The date and time the trouble ticket was resolved
        severity:
          type: string
          description: >-
            The severity of the issue. Indicate the implication of the issue on
            the expected functionality e.g. of a system, application, service
            etc.. 

            Severity values can be for example : Critical, Major, Minor
        status:
          description: The current status of the trouble ticket
          $ref: '#/components/schemas/TroubleTicketStatusType'
        statusChange:
          type: array
          items:
            $ref: '#/components/schemas/StatusChange'
          description: >-
            The status change history that are associated to the
            ticket.Populated by the server
        statusChangeDate:
          type: string
          format: date-time
          description: The date and time the status changed.
        statusChangeReason:
          type: string
          description: The reason for changing the status
        ticketType:
          type: string
          description: >-
            represent a business type of the trouble ticket e.g. incident,
            complain, request
        troubleTicketRelationship:
          type: array
          items:
            $ref: '#/components/schemas/TroubleTicketRelationship'
          description: >-
            A list of trouble ticket relationships (TroubleTicketRelationship
            [*]). Represents a relationship between trouble tickets
    ChannelRef:
      $id: ChannelRef,
      type: object
      description: >-
        The channel to which the resource reference to. e.g. channel for selling
        product offerings, channel for opening a trouble ticket etc..
      required:
        - id
      properties:
        href:
          type: string
          format: uri
          description: Hyperlink reference
        id:
          type: string
          description: unique identifier
        '@baseType':
          type: string
          description: 'When sub-classing, this defines the super-class'
        '@schemaLocation':
          type: string
          format: uri
          description: >-
            A URI to a JSON-Schema file that defines additional attributes and
            relationships
        '@type':
          type: string
          description: 'When sub-classing, this defines the sub-class Extensible name'
        '@referredType':
          type: string
          description: >-
            The actual type of the target instance when needed for
            disambiguation.
        name:
          type: string
          description: Name of the channel.
    TroubleTicketStatusType:
      $id: TroubleTicketStatusType,
      type: string
      description: Possible values for the status of the trouble ticket
      enum:
        - acknowledged
        - rejected
        - pending
        - held
        - inProgress
        - cancelled
        - closed
        - resolved
    Entity:
      $id: Entity,
      type: object
      description: Base entity schema for use in TMForum Open-APIs
      properties:
        href:
          type: string
          format: uri
          description: Hyperlink reference
        id:
          type: string
          description: unique identifier
        '@baseType':
          type: string
          description: 'When sub-classing, this defines the super-class'
        '@schemaLocation':
          type: string
          format: uri
          description: >-
            A URI to a JSON-Schema file that defines additional attributes and
            relationships
        '@type':
          type: string
          description: 'When sub-classing, this defines the sub-class Extensible name'
    Extensible:
      $id: Extensible,
      type: object
      description: Base Extensible schema for use in TMForum Open-APIs
      properties:
        '@baseType':
          type: string
          description: 'When sub-classing, this defines the super-class'
        '@schemaLocation':
          type: string
          format: uri
          description: >-
            A URI to a JSON-Schema file that defines additional attributes and
            relationships
        '@type':
          type: string
          description: 'When sub-classing, this defines the sub-class Extensible name'
    Addressable:
      $id: Addressable,
      type: object
      description: Base schema for adressable entities
      properties:
        href:
          type: string
          format: uri
          description: Hyperlink reference
        id:
          type: string
          description: unique identifier
    TroubleTicketCreate:
      $id: TroubleTicketCreate,
      type: object
      description: >-
        A trouble ticket is a record of an issue that is created, tracked, and
        managed by a trouble ticket management system

        Skipped properties: href,id
      required:
        - description
        - severity
        - ticketType
      properties:
        '@baseType':
          type: string
          description: 'When sub-classing, this defines the super-class'
        '@schemaLocation':
          type: string
          format: uri
          description: >-
            A URI to a JSON-Schema file that defines additional attributes and
            relationships
        '@type':
          type: string
          description: 'When sub-classing, this defines the sub-class Extensible name'
        attachment:
          type: array
          items:
            $ref: '#/components/schemas/AttachmentRefOrValue'
          description: >-
            File(s) attached to the trouble ticket. e.g. pictur of broken
            device, scaning of a bill or charge
        channel:
          description: The channel that origin the trouble ticket
          $ref: '#/components/schemas/ChannelRef'
        creationDate:
          type: string
          format: date-time
          description: The date on which the trouble ticket was created
        description:
          type: string
          description: Description of the trouble or issue
        expectedResolutionDate:
          type: string
          format: date-time
          description: The expected resolution date determined by the trouble ticket system
        externalId:
          type: string
          description: Additional identifier coming from an external system
        lastUpdate:
          type: string
          format: date-time
          description: The date and time that the trouble ticked was last updated
        name:
          type: string
          description: >-
            Name of the trouble ticket, typically a short description provided
            by the user that create the ticket
        note:
          type: array
          items:
            $ref: '#/components/schemas/Note'
          description: The note(s) that are associated to the ticket.
        priority:
          type: string
          description: >-
            The priority of the trouble ticket and how quickly the issue should
            be resolved. Example: Critical, High, Medium, Low. The value is set
            by the ticket management system considering the severity, ticket
            type etc...
        relatedEntity:
          type: array
          items:
            $ref: '#/components/schemas/RelatedEntity'
          description: >-
            An entity that is related to the ticket such as a bill, a product,
            etc. The entity against which the ticket is associated.
        relatedParty:
          type: array
          items:
            $ref: '#/components/schemas/RelatedParty'
          description: The related party(ies) that are associated to the ticket.
        requestedResolutionDate:
          type: string
          format: date-time
          description: The resolution date requested by the user
        resolutionDate:
          type: string
          format: date-time
          description: The date and time the trouble ticket was resolved
        severity:
          type: string
          description: >-
            The severity of the issue. Indicate the implication of the issue on
            the expected functionality e.g. of a system, application, service
            etc.. 

            Severity values can be for example : Critical, Major, Minor
        status:
          description: The current status of the trouble ticket
          $ref: '#/components/schemas/TroubleTicketStatusType'
        statusChange:
          type: array
          items:
            $ref: '#/components/schemas/StatusChange'
          description: >-
            The status change history that are associated to the
            ticket.Populated by the server
        statusChangeDate:
          type: string
          format: date-time
          description: The date and time the status changed.
        statusChangeReason:
          type: string
          description: The reason for changing the status
        ticketType:
          type: string
          description: >-
            represent a business type of the trouble ticket e.g. incident,
            complain, request
        troubleTicketRelationship:
          type: array
          items:
            $ref: '#/components/schemas/TroubleTicketRelationship'
          description: >-
            A list of trouble ticket relationships (TroubleTicketRelationship
            [*]). Represents a relationship between trouble tickets
    TroubleTicketUpdate:
      $id: TroubleTicketUpdate,
      type: object
      description: >-
        A trouble ticket is a record of an issue that is created, tracked, and
        managed by a trouble ticket management system

        Skipped properties:
        creationDate,href,id,lastUpdate,statusChange,statusChangeDate
      properties:
        '@baseType':
          type: string
          description: 'When sub-classing, this defines the super-class'
        '@schemaLocation':
          type: string
          format: uri
          description: >-
            A URI to a JSON-Schema file that defines additional attributes and
            relationships
        '@type':
          type: string
          description: 'When sub-classing, this defines the sub-class Extensible name'
        attachment:
          type: array
          items:
            $ref: '#/components/schemas/AttachmentRefOrValue'
          description: >-
            File(s) attached to the trouble ticket. e.g. pictur of broken
            device, scaning of a bill or charge
        channel:
          description: The channel that origin the trouble ticket
          $ref: '#/components/schemas/ChannelRef'
        description:
          type: string
          description: Description of the trouble or issue
        expectedResolutionDate:
          type: string
          format: date-time
          description: The expected resolution date determined by the trouble ticket system
        externalId:
          type: string
          description: Additional identifier coming from an external system
        name:
          type: string
          description: >-
            Name of the trouble ticket, typically a short description provided
            by the user that create the ticket
        note:
          type: array
          items:
            $ref: '#/components/schemas/Note'
          description: The note(s) that are associated to the ticket.
        priority:
          type: string
          description: >-
            The priority of the trouble ticket and how quickly the issue should
            be resolved. Example: Critical, High, Medium, Low. The value is set
            by the ticket management system considering the severity, ticket
            type etc...
        relatedEntity:
          type: array
          items:
            $ref: '#/components/schemas/RelatedEntity'
          description: >-
            An entity that is related to the ticket such as a bill, a product,
            etc. The entity against which the ticket is associated.
        relatedParty:
          type: array
          items:
            $ref: '#/components/schemas/RelatedParty'
          description: The related party(ies) that are associated to the ticket.
        requestedResolutionDate:
          type: string
          format: date-time
          description: The resolution date requested by the user
        resolutionDate:
          type: string
          format: date-time
          description: The date and time the trouble ticket was resolved
        severity:
          type: string
          description: >-
            The severity of the issue. Indicate the implication of the issue on
            the expected functionality e.g. of a system, application, service
            etc.. 

            Severity values can be for example : Critical, Major, Minor
        status:
          description: The current status of the trouble ticket
          $ref: '#/components/schemas/TroubleTicketStatusType'
        statusChangeReason:
          type: string
          description: The reason for changing the status
        ticketType:
          type: string
          description: >-
            represent a business type of the trouble ticket e.g. incident,
            complain, request
        troubleTicketRelationship:
          type: array
          items:
            $ref: '#/components/schemas/TroubleTicketRelationship'
          description: >-
            A list of trouble ticket relationships (TroubleTicketRelationship
            [*]). Represents a relationship between trouble tickets
    RetrieveTroubleTicketSuccess:
      $id: RetrieveTroubleTicketSuccess,
      description: Success
      properties:
        statusCode:
          const: 200
          type: integer
        body:
          $ref: '#/components/schemas/TroubleTicket'
      required:
        - statusCode
        - body
    BadRequestResponse:
      description: Bad Request
      properties:
        statusCode:
          const: 400
          type: integer
        body:
          $ref: '#/components/schemas/Error'
      required:
        - statusCode
        - body
    UnauthorizedResponse:
      description: Unauthorized
      properties:
        statusCode:
          const: 401
          type: integer
        body:
          $ref: '#/components/schemas/Error'
      required:
        - statusCode
        - body
    ForbiddenResponse:
      description: Forbidden
      properties:
        statusCode:
          const: 403
          type: integer
        body:
          $ref: '#/components/schemas/Error'
      required:
        - statusCode
        - body
    NotFoundResponse:
      description: Not Found
      properties:
        statusCode:
          const: 404
          type: integer
        body:
          $ref: '#/components/schemas/Error'
      required:
        - statusCode
        - body
    MethodNotAllowedResponse:
      description: Method Not allowed
      properties:
        statusCode:
          const: 405
          type: integer
        body:
          $ref: '#/components/schemas/Error'
      required:
        - statusCode
        - body
    ConflictResponse:
      description: Conflict
      properties:
        statusCode:
          const: 409
          type: integer
        body:
          $ref: '#/components/schemas/Error'
      required:
        - statusCode
        - body
    InternalServerErrorResponse:
      description: Internal Server Error
      properties:
        statusCode:
          const: 500
          type: integer
        body:
          $ref: '#/components/schemas/Error'
      required:
        - statusCode
        - body
    RetrieveTroubleTicketResponsePayload:
      oneOf:
        - $ref: '#/components/schemas/RetrieveTroubleTicketSuccess'
        - $ref: '#/components/schemas/BadRequestResponse'
        - $ref: '#/components/schemas/UnauthorizedResponse'
        - $ref: '#/components/schemas/ForbiddenResponse'
        - $ref: '#/components/schemas/NotFoundResponse'
        - $ref: '#/components/schemas/MethodNotAllowedResponse'
        - $ref: '#/components/schemas/ConflictResponse'
        - $ref: '#/components/schemas/InternalServerErrorResponse'
    RetrieveTroubleTicketRequestPayload:
      $id: RetrieveTroubleTicketRequestPayload,
      type: object
      properties:
        parameters:
          $id: RetrieveTroubleTicketRequestPayloadParameters,
          type: object
          properties:
            id:
              description: Identifier of the TroubleTicket
              type: string
            fields:
              description: Comma-separated properties to provide in response
              type: string
          required:
            - id
        filters:
          $id: RetrieveTroubleTicketRequestPayloadFilters,
          type: object
          additionalProperties:
            type: string
      required:
        - parameters
    ListTroubleTicketSuccess:
      description: Success
      properties:
        statusCode:
          const: 200
          type: integer
        body:
          type: array
          items:
            $ref: '#/components/schemas/TroubleTicket'
        headers:
          properties:
            X-Result-Count:
              description: Actual number of items returned in the response body
              type: integer
            X-Total-Count:
              description: Total number of items matching criteria
              type: integer
      required:
        - statusCode
        - body
    ListTroubleTicketResponsePayload:
      oneOf:
        - $ref: '#/components/schemas/ListTroubleTicketSuccess'
        - $ref: '#/components/schemas/BadRequestResponse'
        - $ref: '#/components/schemas/UnauthorizedResponse'
        - $ref: '#/components/schemas/ForbiddenResponse'
        - $ref: '#/components/schemas/NotFoundResponse'
        - $ref: '#/components/schemas/MethodNotAllowedResponse'
        - $ref: '#/components/schemas/ConflictResponse'
        - $ref: '#/components/schemas/InternalServerErrorResponse'
    ListTroubleTicketRequestPayload:
      $id: ListTroubleTicketRequestPayload,
      type: object
      properties:
        parameters:
          $id: ListTroubleTicketRequestPayloadParameters,
          type: object
          properties:
            fields:
              description: Comma-separated properties to be provided in response
              type: string
            offset:
              description: >-
                Requested index for start of resources to be provided in
                response
              type: integer
            limit:
              description: Requested number of resources to be provided in response
              type: integer
          required: []
        filters:
          $id: ListTroubleTicketRequestPayloadFilters,
          type: object
          additionalProperties:
            type: string
      required:
        - parameters
    CreateTroubleTicketCreated:
      description: Created
      properties:
        statusCode:
          const: 201
          type: integer
        body:
          $ref: '#/components/schemas/TroubleTicket'
      required:
        - statusCode
        - body
    CreateTroubleTicketResponsePayload:
      oneOf:
        - $ref: '#/components/schemas/CreateTroubleTicketCreated'
        - $ref: '#/components/schemas/BadRequestResponse'
        - $ref: '#/components/schemas/UnauthorizedResponse'
        - $ref: '#/components/schemas/ForbiddenResponse'
        - $ref: '#/components/schemas/MethodNotAllowedResponse'
        - $ref: '#/components/schemas/ConflictResponse'
        - $ref: '#/components/schemas/InternalServerErrorResponse'
    CreateTroubleTicketRequestPayload:
      $id: CreateTroubleTicketRequestPayload,
      type: object
      properties:
        body:
          $ref: '#/components/schemas/TroubleTicketCreate'
      required:
        - body
    PatchTroubleTicketUpdated:
      description: Updated
      properties:
        statusCode:
          const: 200
          type: integer
        body:
          $ref: '#/components/schemas/TroubleTicket'
      required:
        - statusCode
        - body
    PatchTroubleTicketResponsePayload:
      oneOf:
        - $ref: '#/components/schemas/PatchTroubleTicketUpdated'
        - $ref: '#/components/schemas/BadRequestResponse'
        - $ref: '#/components/schemas/UnauthorizedResponse'
        - $ref: '#/components/schemas/ForbiddenResponse'
        - $ref: '#/components/schemas/NotFoundResponse'
        - $ref: '#/components/schemas/MethodNotAllowedResponse'
        - $ref: '#/components/schemas/ConflictResponse'
        - $ref: '#/components/schemas/InternalServerErrorResponse'
    PatchTroubleTicketRequestPayload:
      $id: PatchTroubleTicketRequestPayload,
      type: object
      properties:
        body:
          $ref: '#/components/schemas/TroubleTicketUpdate'
        parameters:
          $id: PatchTroubleTicketRequestPayloadParameters,
          type: object
          properties:
            id:
              description: Identifier of the TroubleTicket
              type: string
          required:
            - id
      required:
        - body
        - parameters
    DeleteTroubleTicketDeleted:
      description: Deleted
      properties:
        statusCode:
          const: 204
          type: integer
      required:
        - statusCode
    DeleteTroubleTicketResponsePayload:
      oneOf:
        - $ref: '#/components/schemas/DeleteTroubleTicketDeleted'
        - $ref: '#/components/schemas/BadRequestResponse'
        - $ref: '#/components/schemas/UnauthorizedResponse'
        - $ref: '#/components/schemas/ForbiddenResponse'
        - $ref: '#/components/schemas/NotFoundResponse'
        - $ref: '#/components/schemas/MethodNotAllowedResponse'
        - $ref: '#/components/schemas/ConflictResponse'
        - $ref: '#/components/schemas/InternalServerErrorResponse'
    DeleteTroubleTicketRequestPayload:
      $id: DeleteTroubleTicketRequestPayload,
      type: object
      properties:
        parameters:
          $id: DeleteTroubleTicketRequestPayloadParameters,
          type: object
          properties:
            id:
              description: Identifier of the TroubleTicket
              type: string
          required:
            - id
      required:
        - parameters
    TroubleTicketEventPayload:
      $id: TroubleTicketEventPayload,
      type: object
      description: The event data structure
      properties:
        data:
          description: The involved resource data for the event
          $ref: '#/components/schemas/TroubleTicket'
    TroubleTicketCreateEvent:
      $id: TroubleTicketCreateEvent,
      type: object
      description: The notification data structure
      properties:
        correlationId:
          description: The correlation id for this event.
          type: string
        description:
          description: An explnatory of the event.
          type: string
        domain:
          description: The domain of the event.
          type: string
        event:
          description: The event payload linked to the involved resource object
          $ref: '#/components/schemas/TroubleTicketEventPayload'
        eventId:
          description: The identifier of the notification.
          type: string
        eventTime:
          description: Time of the event occurrence.
          format: date-time
          type: string
        eventType:
          description: The type of the notification.
          type: string
          const: "create"
        priority:
          description: A priority.
          type: string
        timeOcurred:
          description: The time the event occured.
          format: date-time
          type: string
        title:
          description: The title of the event.
          type: string
    TroubleTicketDeleteEvent:
      $id: TroubleTicketDeleteEvent,
      type: object
      description: The notification data structure
      properties:
        correlationId:
          description: The correlation id for this event.
          type: string
        description:
          description: An explnatory of the event.
          type: string
        domain:
          description: The domain of the event.
          type: string
        event:
          description: The event payload linked to the involved resource object
          $ref: '#/components/schemas/TroubleTicketEventPayload'
        eventId:
          description: The identifier of the notification.
          type: string
        eventTime:
          description: Time of the event occurrence.
          format: date-time
          type: string
        eventType:
          description: The type of the notification.
          type: string
          const: "detele"
        priority:
          description: A priority.
          type: string
        timeOcurred:
          description: The time the event occured.
          format: date-time
          type: string
        title:
          description: The title of the event.
          type: string
    TroubleTicketChangeEvent:
      $id: TTroubleTicketChangeEvent,
      type: object
      description: The notification data structure
      properties:
        correlationId:
          description: The correlation id for this event.
          type: string
        description:
          description: An explnatory of the event.
          type: string
        domain:
          description: The domain of the event.
          type: string
        event:
          description: The event payload linked to the involved resource object
          $ref: '#/components/schemas/TroubleTicketEventPayload'
        eventId:
          description: The identifier of the notification.
          type: string
        eventTime:
          description: Time of the event occurrence.
          format: date-time
          type: string
        eventType:
          description: The type of the notification.
          type: string
          const: "change"
        priority:
          description: A priority.
          type: string
        timeOcurred:
          description: The time the event occured.
          format: date-time
          type: string
        title:
          description: The title of the event.
          type: string
    TroubleTicketInformationRequiredEvent:
      $id: TroubleTicketInformationRequiredEvent,
      type: object
      description: The notification data structure
      properties:
        correlationId:
          description: The correlation id for this event.
          type: string
        description:
          description: An explnatory of the event.
          type: string
        domain:
          description: The domain of the event.
          type: string
        event:
          description: The event payload linked to the involved resource object
          $ref: '#/components/schemas/TroubleTicketEventPayload'
        eventId:
          description: The identifier of the notification.
          type: string
        eventTime:
          description: Time of the event occurrence.
          format: date-time
          type: string
        eventType:
          description: The type of the notification.
          type: string
          const: "informationRequired"
        priority:
          description: A priority.
          type: string
        timeOcurred:
          description: The time the event occured.
          format: date-time
          type: string
        title:
          description: The title of the event.
          type: string

    TroubleTicketBaseEvent:
      $id: TroubleTicketBaseEvent,
      type: object
      description: The notification data structure
      properties:
        correlationId:
          description: The correlation id for this event.
          type: string
        description:
          description: An explnatory of the event.
          type: string
        domain:
          description: The domain of the event.
          type: string
        event:
          description: The event payload linked to the involved resource object
          $ref: '#/components/schemas/TroubleTicketEventPayload'
        eventId:
          description: The identifier of the notification.
          type: string
        eventTime:
          description: Time of the event occurrence.
          format: date-time
          type: string
        eventType:
          description: The type of the notification.
          type: string
          enum:
            - create
            - delete
            - resolved
            - statusChange
        priority:
          description: A priority.
          type: string
        timeOcurred:
          description: The time the event occured.
          format: date-time
          type: string
        title:
          description: The title of the event.
          type: string
    TroubleTicketBasePlusEvent:
      $id: TroubleTicketBasePlusEvent,
      type: object
      description: The notification data structure
      properties:
        correlationId:
          description: The correlation id for this event.
          type: string
        description:
          description: An explnatory of the event.
          type: string
        domain:
          description: The domain of the event.
          type: string
        eventId:
          description: The identifier of the notification.
          type: string
        eventTime:
          description: Time of the event occurrence.
          format: date-time
          type: string
        eventType:
          description: The type of the notification.
          type: string
          enum:
            - attributeValueChange
            - informationRequired
        fieldPath:
          description: >-
            The path identifying the object field concerned by this
            notification.
          type: string
        priority:
          description: A priority.
          type: string
        timeOcurred:
          description: The time the event occured.
          format: date-time
          type: string
        title:
          description: The title of the event.
          type: string
        event:
          description: The event payload linked to the involved resource object
          $ref: '#/components/schemas/TroubleTicketEventPayload'
    TroubleTicketNotificationPayload:
      oneOf:
        - $ref: '#/components/schemas/TroubleTicketCreateEvent'
        - $ref: '#/components/schemas/TroubleTicketDeleteEvent'
        - $ref: '#/components/schemas/TroubleTicketChangeEvent'
        - $ref: '#/components/schemas/TroubleTicketInformationRequiredEvent'
    CorrelationHeader:
      $id: CorrelationHeader,
      type: object
      properties:
        CORRELATION_ID:
          description: Correlation ID set by application
          type: string
          format: uuid
      required:
        - CORRELATION_ID
    RequestHeaders:
      allOf:
        - type: object
          $id: RequestHeadersAPPLICATION,
          properties:
            APPLICATION:
              type: string
              description: Name of the calling application.
          required:
            - APPLICATION
        - $ref: '#/components/schemas/CorrelationHeader'
  messages:
    RetrieveTroubleTicketRequest:
      name: RetrieveTroubleTicketRequest
      headers:
        $ref: '#/components/schemas/RequestHeaders'
      payload:
        $ref: '#/components/schemas/RetrieveTroubleTicketRequestPayload'
      examples:
        - name: Simple retrieval requests
          summary: A simple Trouble Ticket Retrieve example message
          headers:
            CORRELATION_ID: 7f483581-254f-4a5d-8555-4ea394be2e44
            APPLICATION: ApplicationInstanceOne
          payload:
            parameters:
              id: 7219a44c-4e48-43ad-be68-56c0e4876263
              fields: 'name, status, severity'
    RetrieveTroubleTicketResponse:
      name: RetrieveTroubleTicketResponse
      headers:
        $ref: '#/components/schemas/CorrelationHeader'
      payload:
        $ref: '#/components/schemas/RetrieveTroubleTicketResponsePayload'
      examples:
        - name: Simple trouble ticket response
          summary: A simple Trouble Ticket retrieve response
          headers:
            CORRELATION_ID: 7f483581-254f-4a5d-8555-4ea394be2e44
            APPLICATION: ApplicationInstanceOne
          payload:
            statusCode: 200
            body:
              id: 7219a44c-4e48-43ad-be68-56c0e4876263
              description: >-
                I do not accept the last VOD charge, since the movie was
                constantly interrupted, I had to quick watching the movie in the
                middle
              expectedResolutionDate: '2019-06-10T07:34:45.968Z'
              lastUpdate: '2019-05-31T07:34:45.968Z'
              name: Compliant over last bill
              requestedResolutionDate: '2019-05-31T07:34:45.968Z'
              severity: Urgent
              status: InProgress
              ticketType: Bill Dispute
              attachment:
                - description: Scanned disputed bill
                  mimeType: image/png
                  name: March Bill
                  url: 'https://mycsp.com:7070/docloader?docnum=3534555'
              channel:
                id: '8774'
                name: self service
                '@type': Channel
              note:
                - id: '77456'
                  author: Jack Smith
                  date: '2019-05-31T07:34:45.968Z'
                  text: 'This is quite important, please aproch me as soon as posible'
                  '@type': Note
              relatedEntity:
                - id: '3472'
                  href: >-
                    https://mycsp.com:8080/tmf-api/customerBillManagement/v4/customerBill/8297
                  name: March 2019 Bill
                  role: disputedBill
                  '@type': RelatedEntity
                  '@referredType': CustomerBill
              relatedParty:
                - id: '9866'
                  href: >-
                    https://mycsp.com:8080/tmf-api/partyManagement/v1/individual/9866
                  name: Sandy Smith
                  role: member
                  '@referredType': Individual
                - id: '9176'
                  href: 'https://host:port/partyManagement/v1/customer/9176'
                  name: Jack Smith
                  role: customer
                  '@referredType': Customer
    ListTroubleTicketRequest:
      name: ListTroubleTicketRequest
      headers:
        $ref: '#/components/schemas/RequestHeaders'
      payload:
        $ref: '#/components/schemas/ListTroubleTicketRequestPayload'
      examples:
        - name: Simple trouble ticket list
          summary: A simple Trouble Ticket list
          headers:
            CORRELATION_ID: 7f483581-254f-4a5d-8555-4ea394be2e44
            APPLICATION: ApplicationInstanceOne
          payload:
            parameters:
              offset: '10'
              limit: '10'
            filters:
              status: InProgress
    ListTroubleTicketResponse:
      name: ListTroubleTicketResponse
      headers:
        $ref: '#/components/schemas/CorrelationHeader'
      payload:
        $ref: '#/components/schemas/ListTroubleTicketResponsePayload'
      examples:
        - name: Trouble Ticket List Response
          summary: Sample Trouble Ticket List
          headers:
            CORRELATION_ID: 7f483581-254f-4a5d-8555-4ea394be2e44
            APPLICATION: ApplicationInstanceOne
          payload:
            statusCode: 200
            body:
              - id: 7219a44c-4e48-43ad-be68-56c0e4876263
                description: >-
                  I do not accept the last VOD charge, since the movie was
                  constantly interrupted, I had to quick watching the movie in
                  the middle
                expectedResolutionDate: '2019-06-10T07:34:45.968Z'
                lastUpdate: '2019-05-31T07:34:45.968Z'
                name: Compliant over last bill
                requestedResolutionDate: '2019-05-31T07:34:45.968Z'
                severity: Urgent
                status: InProgress
                ticketType: Bill Dispute
                attachment:
                  - description: Scanned disputed bill
                    mimeType: image/png
                    name: March Bill
                    url: 'https://mycsp.com:7070/docloader?docnum=3534555'
                channel:
                  id: '8774'
                  name: self service
                  '@type': Channel
                note:
                  - id: '77456'
                    author: Jack Smith
                    date: '2019-05-31T07:34:45.968Z'
                    text: >-
                      This is quite important, please aproch me as soon as
                      posible
                    '@type': Note
                relatedEntity:
                  - id: '3472'
                    href: >-
                      https://mycsp.com:8080/tmf-api/customerBillManagement/v4/customerBill/8297
                    name: March 2019 Bill
                    role: disputedBill
                    '@type': RelatedEntity
                    '@referredType': CustomerBill
                relatedParty:
                  - id: '9866'
                    href: >-
                      https://mycsp.com:8080/tmf-api/partyManagement/v1/individual/9866
                    name: Sandy Smith
                    role: member
                    '@referredType': Individual
                  - id: '9176'
                    href: 'https://host:port/partyManagement/v1/customer/9176'
                    name: Jack Smith
                    role: customer
                    '@referredType': Customer
              - id: 6acdd831-2461-4e63-864d-cfb329f9dd78
                description: Service not working
                expectedResolutionDate: '2019-06-10T07:34:45.968Z'
                lastUpdate: '2019-05-31T07:34:45.968Z'
                name: Compliant over last bill
                requestedResolutionDate: '2019-05-31T07:34:45.968Z'
                severity: Urgent
                status: InProgress
                ticketType: Bill Dispute
                attachment:
                  - description: Scanned disputed bill
                    mimeType: image/png
                    name: March Bill
                    url: 'https://mycsp.com:7070/docloader?docnum=3534555'
                channel:
                  id: '8774'
                  name: self service
                  '@type': Channel
                note:
                  - id: '77456'
                    author: Jack Smith
                    date: '2019-05-31T07:34:45.968Z'
                    text: >-
                      This is quite important, please aproch me as soon as
                      posible
                    '@type': Note
                relatedEntity:
                  - id: '3472'
                    href: >-
                      https://mycsp.com:8080/tmf-api/customerBillManagement/v4/customerBill/8297
                    name: March 2019 Bill
                    role: disputedBill
                    '@type': RelatedEntity
                    '@referredType': CustomerBill
                relatedParty:
                  - id: '9866'
                    href: >-
                      https://mycsp.com:8080/tmf-api/partyManagement/v1/individual/9866
                    name: Sandy Smith
                    role: member
                    '@referredType': Individual
                  - id: '9176'
                    href: 'https://host:port/partyManagement/v1/customer/9176'
                    name: Jack Smith
                    role: customer
                    '@referredType': Customer
    CreateTroubleTicketRequest:
      name: CreateTroubleTicketRequest
      headers:
        $ref: '#/components/schemas/RequestHeaders'
      payload:
        $ref: '#/components/schemas/CreateTroubleTicketRequestPayload'
      examples:
        - name: Simple trouble ticket response
          summary: A simple Trouble Ticket retrieve response
          headers:
            CORRELATION_ID: 7f483581-254f-4a5d-8555-4ea394be2e44
            APPLICATION: ApplicationInstanceOne
          payload:
            body:
              description: >-
                I do not accept the last VOD charge, since the movie was
                constantly interrupted, I had to quick watching the movie in the
                middle 
              expectedResolutionDate: '2019-06-10T07:34:45.968Z'
              lastUpdate: '2019-05-31T07:34:45.968Z'
              name: Compliant over last bill
              requestedResolutionDate: '2019-05-31T07:34:45.968Z'
              severity: Urgent
              status: InProgress
              ticketType: Bill Dispute
              attachment:
                - description: Scanned disputed bill
                  mimeType: image/png
                  name: March Bill
                  url: 'https://mycsp.com:7070/docloader?docnum=3534555'
              channel:
                id: '8774'
                name: self service
                '@type': Channel
              note:
                - id: '77456'
                  author: Jack Smith
                  date: '2019-05-31T07:34:45.968Z'
                  text: 'This is quite important, please aproch me as soon as posible'
                  '@type': Note
              relatedEntity:
                - id: '3472'
                  href: >-
                    https://mycsp.com:8080/tmf-api/customerBillManagement/v4/customerBill/8297
                  name: March 2019 Bill
                  role: disputedBill
                  '@type': RelatedEntity
                  '@referredType': CustomerBill
              relatedParty:
                - id: '9866'
                  href: >-
                    https://mycsp.com:8080/tmf-api/partyManagement/v1/individual/9866
                  name: Sandy Smith
                  role: member
                  '@referredType': Individual
                - id: '9176'
                  href: 'https://host:port/partyManagement/v1/customer/9176'
                  name: Jack Smith
                  role: customer
                  '@referredType': Customer
              '@type': TroubleTicket
    CreateTroubleTicketResponse:
      name: CreateTroubleTicketResponse
      headers:
        $ref: '#/components/schemas/CorrelationHeader'
      payload:
        $ref: '#/components/schemas/CreateTroubleTicketResponsePayload'
      examples:
        - name: Create Trouble Ticket Response
          summary: A sample Create Trouble Ticket response
          headers:
            CORRELATION_ID: 7f483581-254f-4a5d-8555-4ea394be2e44
            APPLICATION: ApplicationInstanceOne
          payload:
            statusCode: 201
            body:
              id: 7219a44c-4e48-43ad-be68-56c0e4876263
              description: >-
                I do not accept the last VOD charge, since the movie was
                constantly interrupted, I had to quick watching the movie in the
                middle
              expectedResolutionDate: '2019-06-10T07:34:45.968Z'
              lastUpdate: '2019-05-31T07:34:45.968Z'
              name: Compliant over last bill
              requestedResolutionDate: '2019-05-31T07:34:45.968Z'
              severity: Urgent
              status: InProgress
              ticketType: Bill Dispute
              attachment:
                - description: Scanned disputed bill
                  mimeType: image/png
                  name: March Bill
                  url: 'https://mycsp.com:7070/docloader?docnum=3534555'
              channel:
                id: '8774'
                name: self service
                '@type': Channel
              note:
                - id: '77456'
                  author: Jack Smith
                  date: '2019-05-31T07:34:45.968Z'
                  text: 'This is quite important, please aproch me as soon as posible'
                  '@type': Note
              relatedEntity:
                - id: '3472'
                  href: >-
                    https://mycsp.com:8080/tmf-api/customerBillManagement/v4/customerBill/8297
                  name: March 2019 Bill
                  role: disputedBill
                  '@type': RelatedEntity
                  '@referredType': CustomerBill
              relatedParty:
                - id: '9866'
                  href: >-
                    https://mycsp.com:8080/tmf-api/partyManagement/v1/individual/9866
                  name: Sandy Smith
                  role: member
                  '@referredType': Individual
                - id: '9176'
                  href: 'https://host:port/partyManagement/v1/customer/9176'
                  name: Jack Smith
                  role: customer
                  '@referredType': Customer
    PatchTroubleTicketRequest:
      name: PatchTroubleTicketRequest
      headers:
        $ref: '#/components/schemas/RequestHeaders'
      payload:
        $ref: '#/components/schemas/PatchTroubleTicketRequestPayload'
      examples:
        - name: TroubleTicketPatch
          summary: A simple Trouble Ticket Patch using json-merge
          headers:
            CORRELATION_ID: 7f483581-254f-4a5d-8555-4ea394be2e44
            APPLICATION: ApplicationInstanceOne
          payload:
            parameters:
              id: 7219a44c-4e48-43ad-be68-56c0e4876263
            body:
              status: Closed
              statusChangeReason: Issue Solved
    PatchTroubleTicketResponse:
      name: PatchTroubleTicketResponse
      headers:
        $ref: '#/components/schemas/CorrelationHeader'
      payload:
        $ref: '#/components/schemas/PatchTroubleTicketResponsePayload'
      examples:
        - name: TroubleTicketPatch Response
          summary: A simple Trouble Ticket Patch response with payload
          headers:
            CORRELATION_ID: 7f483581-254f-4a5d-8555-4ea394be2e44
            APPLICATION: ApplicationInstanceOne
          payload:
            statusCode: 200
            body:
              id: 7219a44c-4e48-43ad-be68-56c0e4876263
              description: >-
                I do not accept the last VOD charge, since the movie was
                constantly interrupted, I had to quick watching the movie in the
                middle
              expectedResolutionDate: '2019-06-10T07:34:45.968Z'
              lastUpdate: '2019-05-31T07:34:45.968Z'
              name: Compliant over last bill
              requestedResolutionDate: '2019-05-31T07:34:45.968Z'
              severity: Urgent
              status: closed
              statusChangeReason: Issue Solved
              ticketType: Bill Dispute
              attachment:
                - description: Scanned disputed bill
                  mimeType: image/png
                  name: March Bill
                  url: 'https://mycsp.com:7070/docloader?docnum=3534555'
              channel:
                id: '8774'
                name: self service
                '@type': Channel
              note:
                - id: '77456'
                  author: Jack Smith
                  date: '2019-05-31T07:34:45.968Z'
                  text: 'This is quite important, please aproch me as soon as posible'
                  '@type': Note
              relatedEntity:
                - id: '3472'
                  href: >-
                    https://mycsp.com:8080/tmf-api/customerBillManagement/v4/customerBill/8297
                  name: March 2019 Bill
                  role: disputedBill
                  '@type': RelatedEntity
                  '@referredType': CustomerBill
              relatedParty:
                - id: '9866'
                  href: >-
                    https://mycsp.com:8080/tmf-api/partyManagement/v1/individual/9866
                  name: Sandy Smith
                  role: member
                  '@referredType': Individual
                - id: '9176'
                  href: 'https://host:port/partyManagement/v1/customer/9176'
                  name: Jack Smith
                  role: customer
                  '@referredType': Customer
    DeleteTroubleTicketRequest:
      name: DeleteTroubleTicketRequest
      headers:
        $ref: '#/components/schemas/RequestHeaders'
      payload:
        $ref: '#/components/schemas/DeleteTroubleTicketRequestPayload'
      examples:
        - name: 'TroubleTicketDelete Request Command Example '
          summary: A simple Trouble Ticket Delete Request
          headers:
            CORRELATION_ID: 7f483581-254f-4a5d-8555-4ea394be2e44
            APPLICATION: ApplicationInstanceOne
          payload:
            parameters:
              id: 7219a44c-4e48-43ad-be68-56c0e4876263
    DeleteTroubleTicketResponse:
      name: DeleteTroubleTicketResponse
      headers:
        $ref: '#/components/schemas/CorrelationHeader'
      payload:
        $ref: '#/components/schemas/DeleteTroubleTicketResponsePayload'
      examples:
        - name: 'TroubleTicketDelete Response Command Example '
          summary: A simple Trouble Ticket Delete Response
          headers:
            CORRELATION_ID: 7f483581-254f-4a5d-8555-4ea394be2e44
            APPLICATION: ApplicationInstanceOne
          payload:
            statusCode: '204'
    TroubleTicketNotification:
      name: TroubleTicketNotification
      payload:
        $ref: '#/components/schemas/TroubleTicketNotificationPayload'
      examples:
        - name: TroubleTicket Event
          summary: Example for a Trouble Ticket Create Event
          headers:
            CORRELATION_ID: 7f483581-254f-4a5d-8555-4ea394be2e44
            APPLICATION: ApplicationInstanceOne
          payload:
            correlationId: 7f483581-254f-4a5d-8555-4ea394be2e44
            description: New trouble ticket created
            domain: Customer Care
            eventId: 64fa8527-c75a-4a66-ba58-c1fe0536e177
            eventTime: '2022-08-24T14:15:22Z'
            eventType: create
            priority: high
            timeOcurred: '2022-08-24T14:15:22Z'
            event:
              id: 7219a44c-4e48-43ad-be68-56c0e4876263
              description: >-
                I do not accept the last VOD charge, since the movie was
                constantly interrupted, I had to quick watching the movie in the
                middle
              expectedResolutionDate: '2019-06-10T07:34:45.968Z'
              lastUpdate: '2019-05-31T07:34:45.968Z'
              name: Compliant over last bill
              requestedResolutionDate: '2019-05-31T07:34:45.968Z'
              severity: Urgent
              status: InProgress
              ticketType: Bill Dispute
              attachment:
                - description: Scanned disputed bill
                  mimeType: image/png
                  name: March Bill
                  url: 'https://mycsp.com:7070/docloader?docnum=3534555'
              channel:
                id: '8774'
                name: self service
                '@type': Channel
              note:
                - id: '77456'
                  author: Jack Smith
                  date: '2019-05-31T07:34:45.968Z'
                  text: 'This is quite important, please aproch me as soon as posible'
                  '@type': Note
              relatedEntity:
                - id: '3472'
                  href: >-
                    https://mycsp.com:8080/tmf-api/customerBillManagement/v4/customerBill/8297
                  name: March 2019 Bill
                  role: disputedBill
                  '@type': RelatedEntity
                  '@referredType': CustomerBill
              relatedParty:
                - id: '9866'
                  href: >-
                    https://mycsp.com:8080/tmf-api/partyManagement/v1/individual/9866
                  name: Sandy Smith
                  role: member
                  '@referredType': Individual
                - id: '9176'
                  href: 'https://host:port/partyManagement/v1/customer/9176'
                  name: Jack Smith
                  role: customer
                  '@referredType': Customer
  correlationIds:   
    default:
      description: Default Correlation ID
      location: '$message.header#/CORRELATION_ID'
  operationTraits:
    kafka:
      bindings:
        kafka:
          key:
            type: string
            description: An optional message key
          clientId:
            type: string
            description: >-
              An optional identifier of a Kafka consumer (in a consumer group)
              that is passed to a Kafka broker with every request.
