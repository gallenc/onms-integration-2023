/**
* NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech) (6.5.0).
* https://openapi-generator.tech
* Do not edit the class manually.
*/
package org.opennms.integration.tmf621.camel.api;

import org.apache.camel.builder.RouteBuilder;
import org.apache.camel.model.rest.RestParamType;
import org.springframework.stereotype.Component;
import org.opennms.integration.tmf621.camel.model.*;
import org.apache.camel.model.rest.RestBindingMode;
import org.apache.camel.LoggingLevel;

@Component
public class TroubleTicketApi extends RouteBuilder {

    @Override
    public void configure() throws Exception {
        onException(Exception.class)
            .log(LoggingLevel.ERROR, "${exception.message}: ${exception.stacktrace}")
            .handled(true)
            .process("validationErrorProcessor");
        

        /**
        POST /troubleTicket : Creates a TroubleTicket
        **/
        rest()
            .post("/troubleTicket")
                .description("Creates a TroubleTicket")
                .id("createTroubleTicketApi")
                .clientRequestValidation(false)
                .bindingMode(RestBindingMode.json)
                .produces("application/json;charset=utf-8")
                .outType(TroubleTicket.class)
                .consumes("application/json;charset=utf-8")
                .type(TroubleTicketCreate.class)
                
                .param()
                    .name("troubleTicket")
                    .type(RestParamType.body)
                    .required(true)
                    .description("The TroubleTicket to be created")
                .endParam()
                .to("direct:validate-createTroubleTicket");
        

        /**
        DELETE /troubleTicket/{id} : Deletes a TroubleTicket
        **/
        rest()
            .delete("/troubleTicket/{id}")
                .description("Deletes a TroubleTicket")
                .id("deleteTroubleTicketApi")
                .clientRequestValidation(false)
                .bindingMode(RestBindingMode.json)
                .produces("application/json;charset=utf-8")
                .outType(Void.class)
                .param()
                    .name("id")
                    .type(RestParamType.path)
                    .required(true)
                    .description("Identifier of the TroubleTicket")
                .endParam()
                .to("direct:validate-deleteTroubleTicket");
        

        /**
        GET /troubleTicket : List or find TroubleTicket objects
        **/
        rest()
            .get("/troubleTicket")
                .description("List or find TroubleTicket objects")
                .id("listTroubleTicketApi")
                .clientRequestValidation(false)
                .bindingMode(RestBindingMode.json)
                .produces("application/json;charset=utf-8")
                .outType(TroubleTicket[].class)
                .param()
                    .name("fields")
                    .type(RestParamType.query)
                    .required(false)
                    .description("Comma-separated properties to be provided in response")
                .endParam()
                .param()
                    .name("offset")
                    .type(RestParamType.query)
                    .required(false)
                    .description("Requested index for start of resources to be provided in response")
                .endParam()
                .param()
                    .name("limit")
                    .type(RestParamType.query)
                    .required(false)
                    .description("Requested number of resources to be provided in response")
                .endParam()
                .to("direct:validate-listTroubleTicket");
        

        /**
        PATCH /troubleTicket/{id} : Updates partially a TroubleTicket
        **/
        rest()
            .patch("/troubleTicket/{id}")
                .description("Updates partially a TroubleTicket")
                .id("patchTroubleTicketApi")
                .clientRequestValidation(false)
                .bindingMode(RestBindingMode.json)
                .produces("application/json;charset=utf-8")
                .outType(TroubleTicket.class)
                .consumes("application/json;charset=utf-8")
                .type(TroubleTicketUpdate.class)
                
                .param()
                    .name("id")
                    .type(RestParamType.path)
                    .required(true)
                    .description("Identifier of the TroubleTicket")
                .endParam()
                .param()
                    .name("troubleTicket")
                    .type(RestParamType.body)
                    .required(true)
                    .description("The TroubleTicket to be updated")
                .endParam()
                .to("direct:validate-patchTroubleTicket");
        

        /**
        GET /troubleTicket/{id} : Retrieves a TroubleTicket by ID
        **/
        rest()
            .get("/troubleTicket/{id}")
                .description("Retrieves a TroubleTicket by ID")
                .id("retrieveTroubleTicketApi")
                .clientRequestValidation(false)
                .bindingMode(RestBindingMode.json)
                .produces("application/json;charset=utf-8")
                .outType(TroubleTicket.class)
                .param()
                    .name("id")
                    .type(RestParamType.path)
                    .required(true)
                    .description("Identifier of the TroubleTicket")
                .endParam()
                .param()
                    .name("fields")
                    .type(RestParamType.query)
                    .required(false)
                    .description("Comma-separated properties to provide in response")
                .endParam()
                .to("direct:validate-retrieveTroubleTicket");
        
    }
}
